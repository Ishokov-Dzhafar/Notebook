apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion


    defaultConfig {
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding = true
    }
    dynamicFeatures = []
}

apply from: "$project.rootDir/dependencies_version.gradle"

dependencies {
    implementation project(':core')
    implementation project(':main')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta7'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Navigation
    implementation navigationDependencies.values()

    // Coroutines
    implementation coroutineDependencies.values()

    // Retrofit
    implementation retrofitDependencies.values()

    // Okhttp
    implementation okhttpDependencies.values()

    // ViewModel
    implementation viewModel

    // LiveData
    implementation liveData

    // Lifecycles only (without ViewModel or LiveData)
    implementation lifecycle

    // Room
    implementation roomDependencies.values()
    kapt roomKapt

    // WorkManager
    implementation workManager

    //Dagger2
    implementation dagger
    kapt daggerKapt


}